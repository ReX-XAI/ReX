# serializer version: 1
# name: test__explanation_snapshot[1]
  Explanation(
    args=CausalArgs(
      all=False,
      alpha=0.2,
      analyze=False,
      batch=1,
      binary_threshold=None,
      blend=0.0,
      chunk_size=10,
      colour=200,
      concentrate=False,
      confidence_filter=0.0,
      config_location=None,
      data_location=None,
      db=None,
      distribution=<Distribution.Uniform: 2>,
      distribution_args=None,
      gpu=False,
      grid=False,
      heatmap=None,
      heatmap_colours='magma',
      info=True,
      insertion_step=100,
      iters=2,
      mark_segments=False,
      mask_value=0,
      means=None,
      min_box_size=10,
      mode=None,
      model=None,
      no_expansions=50,
      norm=255.0,
      output=None,
      path='tests/test_data/dog.jpg',
      processed=False,
      progress=True,
      queue_len=1,
      queue_style=<Queue.Area: 1>,
      raw=False,
      resize=False,
      search_limit=1000,
      seed=42,
      segmentation=False,
      shape=None,
      spatial_eta=0.2,
      spatial_radius=25,
      spotlight_eta=0.2,
      spotlight_size=20,
      spotlight_step=5,
      spotlights=10,
      stds=None,
      strategy=<Strategy.Spatial: 2>,
      surface=None,
      tree_depth=10,
      verbosity=0,
      weighted=False,
    ),
    data=Data: RGB, ['N', 3, 224, 224], 224, 224, 3, first
  	 Target:CLASS: 207, CONF: 0.20462, TARGET_CLASS: None, TARGET_CONFIDENCE: None,
    explanation=tensor([[[0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           ...,
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.]],
  
          [[0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           ...,
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.]],
  
          [[0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           ...,
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.]]]),
    final_mask=tensor([[[False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           ...,
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False]],
  
          [[False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           ...,
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False]],
  
          [[False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           ...,
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False]]]),
    maps={207: 4},
    run_stats=dict({
      'avg_box_size': 183.5625,
      'max_depth_reached': 5,
      'total_failing': 126,
      'total_passing': 84,
    }),
    target_map=array([[6.6666665, 6.6666665, 6.6666665, ..., 6.6666665, 6.6666665,
          6.6666665],
         [6.6666665, 6.6666665, 6.6666665, ..., 6.6666665, 6.6666665,
          6.6666665],
         [6.6666665, 6.6666665, 6.6666665, ..., 6.6666665, 6.6666665,
          6.6666665],
         ...,
         [5.5      , 5.5      , 5.5      , ..., 5.5      , 5.5      ,
          5.5      ],
         [5.5      , 5.5      , 5.5      , ..., 5.5      , 5.5      ,
          5.5      ],
         [5.5      , 5.5      , 5.5      , ..., 5.5      , 5.5      ,
          5.5      ]], dtype=float32),
  )
# ---
# name: test__explanation_snapshot[64]
  Explanation(
    args=CausalArgs(
      all=False,
      alpha=0.2,
      analyze=False,
      batch=64,
      binary_threshold=None,
      blend=0.0,
      chunk_size=10,
      colour=200,
      concentrate=False,
      confidence_filter=0.0,
      config_location=None,
      data_location=None,
      db=None,
      distribution=<Distribution.Uniform: 2>,
      distribution_args=None,
      gpu=False,
      grid=False,
      heatmap=None,
      heatmap_colours='magma',
      info=True,
      insertion_step=100,
      iters=2,
      mark_segments=False,
      mask_value=0,
      means=None,
      min_box_size=10,
      mode=None,
      model=None,
      no_expansions=50,
      norm=255.0,
      output=None,
      path='tests/test_data/dog.jpg',
      processed=False,
      progress=True,
      queue_len=1,
      queue_style=<Queue.Area: 1>,
      raw=False,
      resize=False,
      search_limit=1000,
      seed=42,
      segmentation=False,
      shape=None,
      spatial_eta=0.2,
      spatial_radius=25,
      spotlight_eta=0.2,
      spotlight_size=20,
      spotlight_step=5,
      spotlights=10,
      stds=None,
      strategy=<Strategy.Spatial: 2>,
      surface=None,
      tree_depth=10,
      verbosity=0,
      weighted=False,
    ),
    data=Data: RGB, ['N', 3, 224, 224], 224, 224, 3, first
  	 Target:CLASS: 207, CONF: 0.20462, TARGET_CLASS: None, TARGET_CONFIDENCE: None,
    explanation=tensor([[[0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           ...,
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.]],
  
          [[0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           ...,
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.]],
  
          [[0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           ...,
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.]]]),
    final_mask=tensor([[[False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           ...,
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False]],
  
          [[False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           ...,
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False]],
  
          [[False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           ...,
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False]]]),
    maps={207: 4},
    run_stats=dict({
      'avg_box_size': 183.5625,
      'max_depth_reached': 5,
      'total_failing': 126,
      'total_passing': 84,
    }),
    target_map=array([[6.6666665, 6.6666665, 6.6666665, ..., 6.6666665, 6.6666665,
          6.6666665],
         [6.6666665, 6.6666665, 6.6666665, ..., 6.6666665, 6.6666665,
          6.6666665],
         [6.6666665, 6.6666665, 6.6666665, ..., 6.6666665, 6.6666665,
          6.6666665],
         ...,
         [5.5      , 5.5      , 5.5      , ..., 5.5      , 5.5      ,
          5.5      ],
         [5.5      , 5.5      , 5.5      , ..., 5.5      , 5.5      ,
          5.5      ],
         [5.5      , 5.5      , 5.5      , ..., 5.5      , 5.5      ,
          5.5      ]], dtype=float32),
  )
# ---
# name: test__explanation_snapshot_diff_model_shape[1]
  Explanation(
    args=CausalArgs(
      all=False,
      alpha=0.2,
      analyze=False,
      batch=1,
      binary_threshold=None,
      blend=0.0,
      chunk_size=10,
      colour=200,
      concentrate=False,
      confidence_filter=0.0,
      config_location=None,
      data_location=None,
      db=None,
      distribution=<Distribution.Uniform: 2>,
      distribution_args=None,
      gpu=False,
      grid=False,
      heatmap=None,
      heatmap_colours='magma',
      info=True,
      insertion_step=100,
      iters=2,
      mark_segments=False,
      mask_value=0,
      means=None,
      min_box_size=10,
      mode=None,
      model=None,
      no_expansions=50,
      norm=255.0,
      output=None,
      path='tests/test_data/dog.jpg',
      processed=False,
      progress=True,
      queue_len=1,
      queue_style=<Queue.Area: 1>,
      raw=False,
      resize=False,
      search_limit=1000,
      seed=42,
      segmentation=False,
      shape=None,
      spatial_eta=0.2,
      spatial_radius=25,
      spotlight_eta=0.2,
      spotlight_size=20,
      spotlight_step=5,
      spotlights=10,
      stds=None,
      strategy=<Strategy.Spatial: 2>,
      surface=None,
      tree_depth=10,
      verbosity=0,
      weighted=False,
    ),
    data=Data: RGB, ['N', 3, 256, 256], 256, 256, 3, first
  	 Target:CLASS: 215, CONF: 0.48740, TARGET_CLASS: None, TARGET_CONFIDENCE: None,
    explanation=tensor([[[0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           ...,
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.]],
  
          [[0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           ...,
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.]],
  
          [[0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           ...,
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.]]]),
    final_mask=tensor([[[False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           ...,
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False]],
  
          [[False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           ...,
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False]],
  
          [[False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           ...,
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False]]]),
    maps={215: 4},
    run_stats=dict({
      'avg_box_size': 262.0,
      'max_depth_reached': 5,
      'total_failing': 136,
      'total_passing': 60,
    }),
    target_map=array([[2.3333335, 2.3333335, 2.3333335, ..., 2.3333335, 2.3333335,
          2.3333335],
         [2.3333335, 2.3333335, 2.3333335, ..., 2.3333335, 2.3333335,
          2.3333335],
         [2.3333335, 2.3333335, 2.3333335, ..., 2.3333335, 2.3333335,
          2.3333335],
         ...,
         [5.666667 , 5.666667 , 5.666667 , ..., 8.166666 , 8.166666 ,
          8.166666 ],
         [5.666667 , 5.666667 , 5.666667 , ..., 8.166666 , 8.166666 ,
          8.166666 ],
         [5.666667 , 5.666667 , 5.666667 , ..., 8.166666 , 8.166666 ,
          8.166666 ]], dtype=float32),
  )
# ---
# name: test__explanation_snapshot_diff_model_shape[64]
  Explanation(
    args=CausalArgs(
      all=False,
      alpha=0.2,
      analyze=False,
      batch=64,
      binary_threshold=None,
      blend=0.0,
      chunk_size=10,
      colour=200,
      concentrate=False,
      confidence_filter=0.0,
      config_location=None,
      data_location=None,
      db=None,
      distribution=<Distribution.Uniform: 2>,
      distribution_args=None,
      gpu=False,
      grid=False,
      heatmap=None,
      heatmap_colours='magma',
      info=True,
      insertion_step=100,
      iters=2,
      mark_segments=False,
      mask_value=0,
      means=None,
      min_box_size=10,
      mode=None,
      model=None,
      no_expansions=50,
      norm=255.0,
      output=None,
      path='tests/test_data/dog.jpg',
      processed=False,
      progress=True,
      queue_len=1,
      queue_style=<Queue.Area: 1>,
      raw=False,
      resize=False,
      search_limit=1000,
      seed=42,
      segmentation=False,
      shape=None,
      spatial_eta=0.2,
      spatial_radius=25,
      spotlight_eta=0.2,
      spotlight_size=20,
      spotlight_step=5,
      spotlights=10,
      stds=None,
      strategy=<Strategy.Spatial: 2>,
      surface=None,
      tree_depth=10,
      verbosity=0,
      weighted=False,
    ),
    data=Data: RGB, ['N', 3, 256, 256], 256, 256, 3, first
  	 Target:CLASS: 215, CONF: 0.48740, TARGET_CLASS: None, TARGET_CONFIDENCE: None,
    explanation=tensor([[[0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           ...,
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.]],
  
          [[0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           ...,
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.]],
  
          [[0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           ...,
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.],
           [0., 0., 0.,  ..., 0., 0., 0.]]]),
    final_mask=tensor([[[False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           ...,
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False]],
  
          [[False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           ...,
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False]],
  
          [[False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           ...,
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False]]]),
    maps={215: 4},
    run_stats=dict({
      'avg_box_size': 262.0,
      'max_depth_reached': 5,
      'total_failing': 136,
      'total_passing': 60,
    }),
    target_map=array([[2.3333335, 2.3333335, 2.3333335, ..., 2.3333335, 2.3333335,
          2.3333335],
         [2.3333335, 2.3333335, 2.3333335, ..., 2.3333335, 2.3333335,
          2.3333335],
         [2.3333335, 2.3333335, 2.3333335, ..., 2.3333335, 2.3333335,
          2.3333335],
         ...,
         [5.666667 , 5.666667 , 5.666667 , ..., 8.166666 , 8.166666 ,
          8.166666 ],
         [5.666667 , 5.666667 , 5.666667 , ..., 8.166666 , 8.166666 ,
          8.166666 ],
         [5.666667 , 5.666667 , 5.666667 , ..., 8.166666 , 8.166666 ,
          8.166666 ]], dtype=float32),
  )
# ---
# name: test_extract_analyze[global]
  tensor([[[False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           ...,
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False]],
  
          [[False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           ...,
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False]],
  
          [[False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           ...,
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False]]])
# ---
# name: test_extract_analyze[global].1
  dict({
    'area': 0.0112,
    'deletion_curve': 1.0199,
    'entropy_diff': 7.1353,
    'insertion_curve': 1.2399,
  })
# ---
# name: test_extract_analyze[spatial]
  tensor([[[False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           ...,
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False]],
  
          [[False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           ...,
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False]],
  
          [[False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           ...,
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False],
           [False, False, False,  ..., False, False, False]]])
# ---
# name: test_extract_analyze[spatial].1
  dict({
    'area': 0.0112,
    'deletion_curve': 1.0199,
    'entropy_diff': 7.1353,
    'insertion_curve': 1.2399,
  })
# ---
