# serializer version: 1
# name: test__explanation_snapshot[1]
  Explanation(
    args=CausalArgs(
      all=False,
      alpha=0.2,
      analyze=False,
      batch=1,
      binary_threshold=None,
      blend=0.0,
      chunk_size=10,
      colour=200,
      concentrate=False,
      confidence_filter=0.0,
      config_location=None,
      custom=None,
      custom_location=None,
      data_location=None,
      db=None,
      distribution=<Distribution.Uniform: 2>,
      distribution_args=None,
      gpu=False,
      grid=False,
      heatmap=None,
      heatmap_colours='magma',
      info=True,
      insertion_step=100,
      iters=2,
      mark_segments=False,
      mask_value='spectral',
      means=None,
      min_box_size=10,
      mode='spectral',
      no_expansions=50,
      norm=255.0,
      output=None,
      path='tests/test_data/spectrum_class_DNA.npy',
      processed=False,
      progress=True,
      queue_len=1,
      queue_style=<Queue.Area: 1>,
      raw=False,
      resize=False,
      search_limit=1000,
      seed=15,
      segmentation=False,
      shape=None,
      spatial_eta=0.2,
      spatial_radius=25,
      spotlight_eta=0.2,
      spotlight_size=20,
      spotlight_step=5,
      spotlights=10,
      stds=None,
      strategy=<Strategy.Global: 1>,
      surface=None,
      tree_depth=10,
      verbosity=0,
      weighted=False,
    ),
    data=Data: spectral, ['batch_size', 1, 1356], 1, 1356, 1, None
  	 Target:CLASS: 1, CONF: 0.99817, TARGET_CLASS: None, TARGET_CONFIDENCE: None,
    explanation=tensor([[-1.9245, -1.8787, -1.9656,  ..., -0.6328, -0.5617, -0.7713]]),
    final_mask=tensor([[ True,  True,  True,  ...,  True,  True, False]]),
    maps={1: 4},
    run_stats=dict({
      'avg_box_size': 339.0,
      'max_depth_reached': 2,
      'total_failing': 0,
      'total_passing': 56,
    }),
    target_map=array([[14.000001, 14.000001, 14.000001, ..., 14.000001, 14.000001,
          14.000001]], dtype=float32),
  )
# ---
