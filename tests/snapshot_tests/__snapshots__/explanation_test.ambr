# serializer version: 1
# name: test_calculate_responsibility[Distribution.BetaBinomial-dist_args1]
  Explanation(
    args=CausalArgs(
      all=False,
      alpha=0.2,
      analyze=False,
      batch_size=1,
      binary_threshold=None,
      blend=0.0,
      chunk_size=10,
      colour=200,
      concentrate=False,
      confidence_filter=0.0,
      config_location=None,
      data_location=None,
      db=None,
      distribution=<Distribution.BetaBinomial: 3>,
      distribution_args=list([
        1,
        1,
      ]),
      gpu=False,
      grid=False,
      heatmap=None,
      heatmap_colours='magma',
      info=True,
      insertion_step=100,
      iters=2,
      mark_segments=False,
      mask_value=0,
      max_spotlight_budget=40,
      means=None,
      min_box_size=10,
      minimum_confidence_threshold=0.0,
      mode=None,
      multi_style='composite',
      no_expansions=4,
      norm=255.0,
      normalise_curves=True,
      output=None,
      path='tests/test_data/dog.jpg',
      permitted_overlap=0.0,
      processed=False,
      progress_bar=True,
      queue_len=1,
      queue_style=<Queue.Area: 1>,
      raw=False,
      resize=False,
      search_limit=1000,
      seed=42,
      segmentation=False,
      shape=None,
      spatial_initial_radius=25,
      spatial_radius_eta=0.2,
      spotlight_eta=0.2,
      spotlight_size=20,
      spotlight_step=5,
      spotlights=10,
      stds=None,
      strategy=<Strategy.Global: 1>,
      surface=None,
      tree_depth=10,
      verbosity=0,
      weighted=False,
    ),
    data=Data: RGB, ['N', 3, 224, 224], 224, 224, 3, first
  	 Target:FOUND_CLASS: 207, FOUND_CONF: 0.20462, TARGET_CLASS: n/a, TARGET_CONFIDENCE: n/a,
    explanation_confidence=0.0,
    maps={207: 1},
    run_stats=dict({
      'avg_box_size': 128.16666666666669,
      'max_depth_reached': 6,
      'total_failing': 177,
      'total_passing': 89,
    }),
  )
# ---
# name: test_calculate_responsibility[Distribution.BetaBinomial-dist_args2]
  Explanation(
    args=CausalArgs(
      all=False,
      alpha=0.2,
      analyze=False,
      batch_size=1,
      binary_threshold=None,
      blend=0.0,
      chunk_size=10,
      colour=200,
      concentrate=False,
      confidence_filter=0.0,
      config_location=None,
      data_location=None,
      db=None,
      distribution=<Distribution.BetaBinomial: 3>,
      distribution_args=list([
        0.5,
        0.5,
      ]),
      gpu=False,
      grid=False,
      heatmap=None,
      heatmap_colours='magma',
      info=True,
      insertion_step=100,
      iters=2,
      mark_segments=False,
      mask_value=0,
      max_spotlight_budget=40,
      means=None,
      min_box_size=10,
      minimum_confidence_threshold=0.0,
      mode=None,
      multi_style='composite',
      no_expansions=4,
      norm=255.0,
      normalise_curves=True,
      output=None,
      path='tests/test_data/dog.jpg',
      permitted_overlap=0.0,
      processed=False,
      progress_bar=True,
      queue_len=1,
      queue_style=<Queue.Area: 1>,
      raw=False,
      resize=False,
      search_limit=1000,
      seed=42,
      segmentation=False,
      shape=None,
      spatial_initial_radius=25,
      spatial_radius_eta=0.2,
      spotlight_eta=0.2,
      spotlight_size=20,
      spotlight_step=5,
      spotlights=10,
      stds=None,
      strategy=<Strategy.Global: 1>,
      surface=None,
      tree_depth=10,
      verbosity=0,
      weighted=False,
    ),
    data=Data: RGB, ['N', 3, 224, 224], 224, 224, 3, first
  	 Target:FOUND_CLASS: 207, FOUND_CONF: 0.20462, TARGET_CLASS: n/a, TARGET_CONFIDENCE: n/a,
    explanation_confidence=0.0,
    maps={207: 1},
    run_stats=dict({
      'avg_box_size': 86.0,
      'max_depth_reached': 5,
      'total_failing': 141,
      'total_passing': 83,
    }),
  )
# ---
# name: test_calculate_responsibility[Distribution.BetaBinomial-dist_args3]
  Explanation(
    args=CausalArgs(
      all=False,
      alpha=0.2,
      analyze=False,
      batch_size=1,
      binary_threshold=None,
      blend=0.0,
      chunk_size=10,
      colour=200,
      concentrate=False,
      confidence_filter=0.0,
      config_location=None,
      data_location=None,
      db=None,
      distribution=<Distribution.BetaBinomial: 3>,
      distribution_args=list([
        1,
        0.5,
      ]),
      gpu=False,
      grid=False,
      heatmap=None,
      heatmap_colours='magma',
      info=True,
      insertion_step=100,
      iters=2,
      mark_segments=False,
      mask_value=0,
      max_spotlight_budget=40,
      means=None,
      min_box_size=10,
      minimum_confidence_threshold=0.0,
      mode=None,
      multi_style='composite',
      no_expansions=4,
      norm=255.0,
      normalise_curves=True,
      output=None,
      path='tests/test_data/dog.jpg',
      permitted_overlap=0.0,
      processed=False,
      progress_bar=True,
      queue_len=1,
      queue_style=<Queue.Area: 1>,
      raw=False,
      resize=False,
      search_limit=1000,
      seed=42,
      segmentation=False,
      shape=None,
      spatial_initial_radius=25,
      spatial_radius_eta=0.2,
      spotlight_eta=0.2,
      spotlight_size=20,
      spotlight_step=5,
      spotlights=10,
      stds=None,
      strategy=<Strategy.Global: 1>,
      surface=None,
      tree_depth=10,
      verbosity=0,
      weighted=False,
    ),
    data=Data: RGB, ['N', 3, 224, 224], 224, 224, 3, first
  	 Target:FOUND_CLASS: 207, FOUND_CONF: 0.20462, TARGET_CLASS: n/a, TARGET_CONFIDENCE: n/a,
    explanation_confidence=0.0,
    maps={207: 1},
    run_stats=dict({
      'avg_box_size': 215.25,
      'max_depth_reached': 6,
      'total_failing': 102,
      'total_passing': 66,
    }),
  )
# ---
# name: test_calculate_responsibility[Distribution.BetaBinomial-dist_args4]
  Explanation(
    args=CausalArgs(
      all=False,
      alpha=0.2,
      analyze=False,
      batch_size=1,
      binary_threshold=None,
      blend=0.0,
      chunk_size=10,
      colour=200,
      concentrate=False,
      confidence_filter=0.0,
      config_location=None,
      data_location=None,
      db=None,
      distribution=<Distribution.BetaBinomial: 3>,
      distribution_args=list([
        0.5,
        1,
      ]),
      gpu=False,
      grid=False,
      heatmap=None,
      heatmap_colours='magma',
      info=True,
      insertion_step=100,
      iters=2,
      mark_segments=False,
      mask_value=0,
      max_spotlight_budget=40,
      means=None,
      min_box_size=10,
      minimum_confidence_threshold=0.0,
      mode=None,
      multi_style='composite',
      no_expansions=4,
      norm=255.0,
      normalise_curves=True,
      output=None,
      path='tests/test_data/dog.jpg',
      permitted_overlap=0.0,
      processed=False,
      progress_bar=True,
      queue_len=1,
      queue_style=<Queue.Area: 1>,
      raw=False,
      resize=False,
      search_limit=1000,
      seed=42,
      segmentation=False,
      shape=None,
      spatial_initial_radius=25,
      spatial_radius_eta=0.2,
      spotlight_eta=0.2,
      spotlight_size=20,
      spotlight_step=5,
      spotlights=10,
      stds=None,
      strategy=<Strategy.Global: 1>,
      surface=None,
      tree_depth=10,
      verbosity=0,
      weighted=False,
    ),
    data=Data: RGB, ['N', 3, 224, 224], 224, 224, 3, first
  	 Target:FOUND_CLASS: 207, FOUND_CONF: 0.20462, TARGET_CLASS: n/a, TARGET_CONFIDENCE: n/a,
    explanation_confidence=0.0,
    maps={207: 1},
    run_stats=dict({
      'avg_box_size': 850.3333333333334,
      'max_depth_reached': 7,
      'total_failing': 157,
      'total_passing': 81,
    }),
  )
# ---
# name: test_calculate_responsibility[Distribution.Uniform-dist_args0]
  Explanation(
    args=CausalArgs(
      all=False,
      alpha=0.2,
      analyze=False,
      batch_size=1,
      binary_threshold=None,
      blend=0.0,
      chunk_size=10,
      colour=200,
      concentrate=False,
      confidence_filter=0.0,
      config_location=None,
      data_location=None,
      db=None,
      distribution=<Distribution.Uniform: 2>,
      distribution_args=None,
      gpu=False,
      grid=False,
      heatmap=None,
      heatmap_colours='magma',
      info=True,
      insertion_step=100,
      iters=2,
      mark_segments=False,
      mask_value=0,
      max_spotlight_budget=40,
      means=None,
      min_box_size=10,
      minimum_confidence_threshold=0.0,
      mode=None,
      multi_style='composite',
      no_expansions=4,
      norm=255.0,
      normalise_curves=True,
      output=None,
      path='tests/test_data/dog.jpg',
      permitted_overlap=0.0,
      processed=False,
      progress_bar=True,
      queue_len=1,
      queue_style=<Queue.Area: 1>,
      raw=False,
      resize=False,
      search_limit=1000,
      seed=42,
      segmentation=False,
      shape=None,
      spatial_initial_radius=25,
      spatial_radius_eta=0.2,
      spotlight_eta=0.2,
      spotlight_size=20,
      spotlight_step=5,
      spotlights=10,
      stds=None,
      strategy=<Strategy.Global: 1>,
      surface=None,
      tree_depth=10,
      verbosity=0,
      weighted=False,
    ),
    data=Data: RGB, ['N', 3, 224, 224], 224, 224, 3, first
  	 Target:FOUND_CLASS: 207, FOUND_CONF: 0.20462, TARGET_CLASS: n/a, TARGET_CONFIDENCE: n/a,
    explanation_confidence=0.0,
    maps={207: 1},
    run_stats=dict({
      'avg_box_size': 183.5625,
      'max_depth_reached': 5,
      'total_failing': 126,
      'total_passing': 84,
    }),
  )
# ---
